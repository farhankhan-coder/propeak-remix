{
  "version": 3,
  "sources": ["../../../app/Components/reports/incompelete_task_count-report.jsx", "../../../app/routes/incompeleteTaskReports/route.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/Components/reports/incompelete_task_count-report.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/Components/reports/incompelete_task_count-report.jsx\");\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport app from \"../../styles/app.css\";\nimport { CSVLink } from \"react-csv\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: app\n}];\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, ResponsiveContainer } from \"recharts\";\nconst TiltedAxisTick = props => {\n  const {\n    x,\n    y,\n    stroke,\n    payload\n  } = props;\n  return <g transform={`translate(${x},${y})`}>\n      <text x={0} y={0} dy={10} textAnchor=\"middle\" width={20} scaleToFit={true} fontSize={12} fill=\"#666\" transform=\"rotate(-15)\">\n\n        {payload.value}\n      </text>\n    </g>;\n};\n_c = TiltedAxisTick;\nexport default class IncompeleteTaskCountReport extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.getReportData) {\n      this.getReportData = this.getReportData.bind(this);\n    }\n  }\n  state = {\n    users: [],\n    data: [],\n    isLoaded: false,\n    userNameToId: {},\n    projectName: \"\"\n  };\n  async componentDidMount() {\n    if (this.state.users.length === 0) {\n      this.props.context.actions.setUsers();\n    }\n    this.getReportData();\n    this.setState({\n      isLoaded: false\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      projectName: nextProps.context.state.projectName,\n      users: nextProps.context.state.users,\n      userNameToId: nextProps.context.state.userNameToId\n    });\n  }\n  render() {\n    const {\n      incompleteTaskCountReport\n    } = this.props;\n    console.log(incompleteTaskCountReport, \" is data is coming or not \");\n    const CustomLabelList = props => {\n      const {\n        x,\n        y,\n        stroke,\n        value,\n        payload\n      } = props;\n      return <g transform={`translate(${x},${y})`}>\n          <text x={0} y={0} width={20} scaleToFit={true} fontSize={12} fill=\"#666\" transform=\"rotate(-45)\">\n\n            {payload.value}\n          </text>\n        </g>;\n    };\n    const dataChart = <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart data={this.state.data ? this.state.data : []} margin={{\n        top: 5,\n        right: 30,\n        left: 10,\n        bottom: 5\n      }}>\n\n          <XAxis dataKey=\"userName\" tick={<TiltedAxisTick />} minTickGap={10} interval={0} />\n\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" position=\"middle\" />\n          <Bar name=\" New Task Count\" dataKey=\"newtaskCount\" stackId=\"a\" fill=\"#00C49F\">\n        </Bar>\n          <Bar name=\" Inprogress Task Count\" dataKey=\"inprogresstaskCount\" stackId=\"a\" fill=\"#FFBB28\" />\n\n        </BarChart>\n      </ResponsiveContainer>;\n    return <React.Fragment>\n        <div className=\"\">\n          <h3 className=\"project-title\">Member Incomplete Task Count Report</h3>\n          <hr />\n\n          {this.state.isLoaded ? <div className=\"logo\">\n              <img src=\"/images/loading.svg\" alt=\"loading\" />\n            </div> : <div>\n              <div className=\"row \">\n                <div className=\"col-lg-9 col-sm-12 col-md-12 \" style={{\n              height: \"350px\"\n            }}>\n\n                  {dataChart}\n                </div>\n              </div>\n            </div>}\n\n        </div>\n      </React.Fragment>;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TiltedAxisTick\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/incompeleteTaskReports/route.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/incompeleteTaskReports/route.jsx\");\n  import.meta.hot.lastModified = \"1709621791711.1821\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport IncompeleteTaskCountReport from \"../../Components/reports/incompelete_task_count-report\";\nimport { getIncompleteTaskCountReport } from \"../../Services/reports/incompelete_task_reports-service\";\nimport { json } from \"@remix-run/node\";\nexport const loader = async ({\n  params\n}) => {\n  try {\n    const {\n      data,\n      err\n    } = await getIncompleteTaskCountReport(params.reportParams); // Call the function with reportParams\n    console.log(data, \"response .....\");\n    if (err) {\n      console.error('Error fetching incomplete task count report:', err);\n      return json({\n        error: 'Failed to load incomplete task count report'\n      }, {\n        status: 500\n      });\n    }\n    return json({\n      incompleteTaskCountReport: data\n    });\n  } catch (error) {\n    console.error('Error in loader function:', error);\n    return json({\n      error: 'Internal Server Error'\n    }, {\n      status: 500\n    });\n  }\n};\nexport default function IncompeleteTaskCountReportComponent() {\n  _s();\n  const {\n    incompleteTaskCountReport\n  } = useLoaderData();\n  return <div>\n            <IncompeleteTaskCountReport incompleteTaskCountReport={incompleteTaskCountReport} />\n        </div>;\n}\n_s(IncompeleteTaskCountReportComponent, \"DLv7cMT+sF+c03ym8FEm9rJIPhM=\", false, function () {\n  return [useLoaderData];\n});\n_c = IncompeleteTaskCountReportComponent;\nvar _c;\n$RefreshReg$(_c, \"IncompeleteTaskCountReportComponent\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["React", "import_jsx_dev_runtime", "_c"]
}
