{
  "version": 3,
  "sources": ["../../../app/Components/Entitlement/components/applevelaccessrights.jsx", "../../../app/routes/applevelaccessright/route.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/Components/Entitlement/components/applevelaccessrights.jsx\"\n);\nimport.meta.hot.lastModified = \"1709384153053.1104\";\n}\n// REMIX HMR END\n\nimport React, { Component } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport { getUserAppLevelAccessRights } from \"../services/applevelaccessright-service\";\n\nexport default class AppLevelAccessRight extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [],\n      entitlements: this.props.accessRightData || [],\n      userName: \"\",\n      label: \"\",\n      message: \"\",\n      userNameToId: {}, // Initialize userNameToId\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.setUsers();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({ users: this.props.users });\n    }\n  }\n\n  handleInputChange = (e) => {\n    let userName = e.target.value;\n\n    if (userName === \"\") {\n      let entitlementsCopy = [...this.state.entitlements];\n      let entitlements = entitlementsCopy.map((e) => {\n        e.Value = false;\n        return e;\n      });\n      this.setState({\n        entitlements: entitlements,\n        userName: userName,\n        label: \"\",\n      });\n    } else {\n      let userId =\n        this.props.context && // Add null check for context\n        this.props.context.state && // Add null check for context state\n        this.props.context.state.userNameToId &&\n        this.props.context.state.userNameToId[\n          userName.toLowerCase().replace(/ +/g, \"\")\n        ];\n\n      this.getUserAppLevelAccessRights(userId);\n\n      this.setState({\n        userName: userName,\n        label: \"\",\n      });\n    }\n  };\n\n  handleCheck = (id, e) => {\n    const target = e.target;\n    const value = target.checked;\n\n    let rights = [...this.state.entitlements];\n    let userEntitlements = rights.map((r) => {\n      if (r.id === id) {\n        r.Value = value;\n      }\n      return r;\n    });\n\n    this.setState({\n      entitlements: userEntitlements,\n    });\n  };\n\n  async getUserAppLevelAccessRights(userId) {\n    let { response, err } = await getUserAppLevelAccessRights(userId);\n    if (err) {\n      this.setState({\n        message: \"Error: \" + err,\n      });\n    } else if (response && response.data.err) {\n      this.setState({\n        message: \"Error: \" + response.data.err,\n      });\n    } else {\n      if (response.data.length > 0) {\n        let getEntitlements = [];\n        for (let i = 0; i < response.data.length; i++) {\n          getEntitlements = this.state.entitlements.map((e) => {\n            if (\n              response.data[i].entitlementId === e.EntitlementId &&\n              response.data[i].group === e.Group\n            ) {\n              e.Value = true;\n            }\n            return e;\n          });\n        }\n\n        this.setState({\n          entitlements: getEntitlements,\n        });\n      } else {\n        let entitlementsCopy = [...this.state.entitlements];\n        let entitlements = entitlementsCopy.map((e) => {\n          e.Value = false;\n          return e;\n        });\n        this.setState({\n          entitlements: entitlements,\n        });\n      }\n    }\n  }\n\n  reset = () => {\n    let entitlementsCopy = [...this.state.entitlements];\n    let entitlements = entitlementsCopy.map((e) => {\n      e.Value = false;\n      return e;\n    });\n    this.setState({\n      entitlements: entitlements,\n      userName: \"\",\n    });\n  };\n\n  render() {\n    let { entitlements, users } = this.state;\n\n    let entitlementObject = {};\n    let tableHeaderObject = {};\n    if (entitlements.length > 0) {\n      for (let i = 0; i < entitlements.length; i++) {\n        if (entitlementObject[entitlements[i].Group]) {\n          entitlementObject[entitlements[i].Group].push(entitlements[i]);\n        } else {\n          entitlementObject[entitlements[i].Group] = [entitlements[i]];\n        }\n\n        if (tableHeaderObject[entitlements[i].EntitlementId]) {\n          tableHeaderObject[entitlements[i].EntitlementId].push(\n            entitlements[i]\n          );\n        } else {\n          tableHeaderObject[entitlements[i].EntitlementId] = [entitlements[i]];\n        }\n      }\n    }\n\n    var keys = Object.keys(entitlementObject);\n    var tableHeaders = Object.keys(tableHeaderObject);\n    var a = {};\n    let tableHeader = [];\n    for (let i = 0; i < tableHeaders.length; i++) {\n      if (Object.keys(a).indexOf(tableHeaders[i]) === -1) {\n        a[tableHeaders[i]] = [];\n\n        tableHeader.push(<th key={tableHeaders[i]}>{tableHeaders[i]}</th>);\n      }\n    }\n\n    let checkBoxes = keys.map((k, index) => {\n      var arrOfIndx = [];\n      for (var n = 0; n < entitlementObject[k].length; n++) {\n        arrOfIndx.push(\n          Object.keys(a).indexOf(entitlementObject[k][n].EntitlementId)\n        );\n      }\n\n      for (var l = 0; l < Object.keys(a).length; l++) {\n        if (arrOfIndx.indexOf(l) === -1) {\n          let obj = {\n            id: +new Date() + l,\n            Group: k,\n            EntitlementId: \"\",\n            Value: false,\n          };\n\n          entitlementObject[k].splice(l, 0, obj);\n        }\n      }\n\n      let values = entitlementObject[k].map((b, indx) => {\n        if (Object.keys(a)[indx] === b.EntitlementId) {\n          return (\n            <td key={b.id}>\n              <input\n                type=\"checkbox\"\n                className=\"access-check\"\n                placeholder=\" \"\n                onChange={this.handleCheck.bind(this, b.id)}\n                checked={b.Value}\n              />\n            </td>\n          );\n        } else {\n          return <td key={b.id}></td>;\n        }\n      });\n\n      return (\n        <tr key={k}>\n          <td>{k}</td>\n          {values}\n        </tr>\n      );\n    });\n\n    let Users = null;\n    if (users !== null && users.length > 0) {\n      Users = users.map((u) => {\n        return (\n          <div key={u._id}>\n            <option data-value={u.userId}>{u.name}</option>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"container bg-white\">\n        <Form method=\"POST\" action=\"/applevelaccessrights\">\n          <span style={{ color: \"green\" }}>{this.state.label}</span>\n          <div className=\"row\" style={{ marginTop: \"10px\" }}>\n            <div className=\"col-sm-5\">\n              <label htmlFor=\"Assigned Users\" style={{ fontSize: \"small\" }}>\n                Users :{\" \"}\n              </label>\n              <span style={{ position: \"relative\", display: \"flex\" }}>\n                <input\n                  type=\"text\"\n                  value={this.state.userName}\n                  list=\"assignedUsers\"\n                  onChange={this.handleInputChange}\n                  name=\"userName\"\n                  className=\"form-control rounded-0\"\n                  autoComplete=\"off\"\n                  placeholder=\"Select User\"\n                />\n                {this.state.userName && (\n                  <span\n                    onClick={this.reset}\n                    className=\"fa fa-times-circle rounded-0 close-circle\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"11px\",\n                      right: \"50px\",\n                      cursor: \"pointer\",\n                    }}\n                  ></span>\n                )}\n              </span>\n\n              <datalist id=\"assignedUsers\">{Users}</datalist>\n            </div>\n          </div>\n          <br />\n          <div className=\"table\" id=\"app-access\">\n            <table className=\"scroll\">\n              <thead>\n                <tr>\n                  <th>Group</th>\n                  {tableHeader}\n                </tr>\n              </thead>\n              <tbody>{checkBoxes}</tbody>\n            </table>\n          </div>\n          <div className=\"row\" style={{ marginTop: \"10px\" }}>\n            <div className=\"col-sm-2 float-right\">\n              <input\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                value=\"Save\"\n                disabled={!this.state.userName}\n              />\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/applevelaccessright/route.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/applevelaccessright/route.jsx\");\n  import.meta.hot.lastModified = \"1709722236365.8904\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { json, useLoaderData, redirect } from \"@remix-run/react\";\nimport TaskMenu from \"../../Components/tasks/task-menu\";\nimport { getAppLevelAccessState, saveUserAppLevelAccessRight, getUserAppLevelAccessRights } from \"../../Components/Entitlement/services/applevelaccessright-service\";\nimport AppLevelAccessRight from \"../../Components/Entitlement/components/applevelaccessrights\";\nimport Header from \"../header\";\nimport Footer from \"../footer\";\nimport Menu from \"../menu\";\nexport async function loader({\n  params\n}) {\n  try {\n    // Extract any parameters needed for fetching the user ID\n    const {\n      userId\n    } = params;\n    // Now that we have the user ID, we can proceed with loading the access rights\n    const {\n      accessRightData,\n      err\n    } = await getAppLevelAccessState();\n    console.log(accessRightData, \"   okay \");\n    // Fetch the user's app level access rights using the obtained user ID\n    const {\n      response: appLevelAccessRight,\n      err: accessRightErr\n    } = await getUserAppLevelAccessRights(userId);\n    // console.log(appLevelAccessRight, \" app level access data \");\n\n    if (err || accessRightErr) {\n      throw err || accessRightErr;\n    }\n    return json({\n      accessRightData,\n      appLevelAccessRight\n    }); // Include users in the data object\n  } catch (error) {\n    console.error(\"Error fetching app level access state:\", error);\n    throw error;\n  }\n}\n\n// export async function loader() {\n//   try {\n//     const { accessRightData, err } = await getAppLevelAccessState();\n//     const {appLevelAccessRight} =await getUserAppLevelAccessRights();\n//     // console.log(accessRightData, \" access data \");\n//     console.log(appLevelAccessRight, \" app level access data \");\n\n//     if (err ) {\n//       throw err ;\n//     }\n//     return json({ accessRightData ,appLevelAccessRight}); // Include users in the data object\n//   } catch (error) {\n//     console.error(\"Error fetching app level access state:\", error);\n//     throw error;\n//   }\n// }\n\nexport default function AppLevelAccessRightsComponent() {\n  _s();\n  const {\n    accessRightData,\n    appLevelAccessRight\n  } = useLoaderData();\n  const context = {};\n  const actions = {\n    setUsers: () => {}\n  };\n  return <div>\n      <Header />\n      <Menu />{\" \"}\n      <AppLevelAccessRight accessRightData={accessRightData} context={context} actions={actions} />\n      <Footer />\n    </div>;\n}\n_s(AppLevelAccessRightsComponent, \"ApJhUugqIpnWV7PG9MkhkfB+Obk=\", false, function () {\n  return [useLoaderData];\n});\n_c = AppLevelAccessRightsComponent;\nexport async function action({\n  request\n}) {\n  try {\n    if (request.method === \"POST\") {\n      const formData = new URLSearchParams(await request.text());\n      const userId = formData.get(\"userId\");\n      const entitlementId = formData.get(\"entitlementId\");\n      const group = formData.get(\"group\");\n      const access = formData.get(\"access\");\n      const createdBy = formData.get(\"createdBy\");\n      console.log(formData, \" form data .......\");\n      const {\n        response,\n        err\n      } = await saveUserAppLevelAccessRight(userId, entitlementId, group, access, createdBy);\n      if (!err) {\n        return redirect(\"/applevelaccessrights\");\n      } else {\n        console.error(\"Error saving user app level access right:\", err);\n        return json({\n          error: \"Failed to save user app level access right.\"\n        }, {\n          status: 500\n        });\n      }\n    } else {\n      return json({\n        error: \"Invalid request method.\"\n      }, {\n        status: 400\n      });\n    }\n  } catch (error) {\n    console.error(\"Error processing request:\", error);\n    return json({\n      error: \"Internal server error.\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AppLevelAccessRightsComponent\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["e", "import_jsx_dev_runtime"]
}
