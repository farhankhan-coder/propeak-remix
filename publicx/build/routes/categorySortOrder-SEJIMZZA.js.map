{
  "version": 3,
  "sources": ["../../../app/Components/categorySortOrder/categorySortOrder.jsx", "../../../app/routes/categorySortOrder/route.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/Components/categorySortOrder/categorySortOrder.jsx\"\n);\nimport.meta.hot.lastModified = \"1709384153069.1104\";\n}\n// REMIX HMR END\n\nimport React, { Component } from \"react\";\nimport TaskMenu from \"../tasks/task-menu\";\nimport * as projectservice from \"../../Services/project/project-service\";\nimport { Form } from \"@remix-run/react\";\n\nexport default class CategorySortOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.cat = [];\n  }\n\n  state = {\n    labelvalue: \"\",\n    labelsuccessvalue: \"\",\n    projectName: \"\",\n    project: null,\n    users: [],\n    categorySequency: [],\n  };\n\n  async componentDidMount() {\n    await this.props.context.actions.getProjectData(this.props.projectId);\n    if (this.state.users.length === 0) this.props.context.actions.setUsers();\n\n    if (this.state.project && this.state.project.category) {\n      this.setState({\n        categorySequency: this.state.project.category.split(\",\"),\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      project: nextProps.context.state.project,\n      users: nextProps.context.state.users,\n    });\n  }\n\n  handleInputChange(e, index) {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    const new_index = value;\n    const old_index = this.state.categorySequency.indexOf(name);\n\n    let orderlist = array_move(\n      this.state.categorySequency,\n      old_index,\n      new_index\n    );\n\n    this.setState({\n      labelvalue: \"\",\n      labelsuccessvalue: \"\",\n      categorySequency: orderlist,\n    });\n\n    function array_move(arr, old_index, new_index) {\n      if (new_index >= arr.length) {\n        new_index = old_index;\n      }\n      arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n      return arr;\n    }\n  }\n  render() {\n    const { categories } = this.props;\n    console.log(categories, \"category value from component \");\n    let category;\n\n    if (this.state.categorySequency) {\n      category = this.state.categorySequency;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"container content-wrapper\">\n          <h3 className=\"project-title d.inline-block mt-3 mb-3\">\n            {this.state.projectName}-Change Frequency\n          </h3>\n          <hr />\n          {/* <TaskMenu {...this.props} /> */}\n          <Form method=\"PUT\" action=\"/categorySortOrder/${category._id}\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                {this.state.labelvalue ? (\n                  <span\n                    htmlFor=\"project\"\n                    className=\"alert alert-danger\"\n                    value={this.state.labelvalue}\n                  >\n                    {this.state.labelvalue}\n                  </span>\n                ) : this.state.labelsuccessvalue ? (\n                  <span\n                    htmlFor=\"project\"\n                    className=\"alert alert-success\"\n                    value={this.state.labelsuccessvalue}\n                  >\n                    {this.state.labelsuccessvalue}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12\"> </div>\n            </div>\n            {categories &&\n              categories.map((category, index) => (\n                <div className=\"row\" key={index}>\n                  <div className=\"col-sm-3\">\n                    <label>{category.title}</label>\n                  </div>\n                  <div className=\"col-sm-3\">\n                    <input\n                      type=\"text\"\n                      onChange={(e) => this.handleInputChange(e, category.title)}\n                      value={category.sequence || ''}\n                    />\n                  </div>\n                </div>\n              ))}\n            <div className=\"row\">\n              <div className=\"col-sm-3\"></div>\n              <div className=\"col-sm-2\">\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"btn btn-info btn-block\"\n                />\n              </div>\n            </div>\n          </Form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/categorySortOrder/route.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/categorySortOrder/route.jsx\");\n  import.meta.hot.lastModified = \"1709725745212.425\";\n}\n// REMIX HMR END\n\nimport CategorySortOrder from \"../../Components/categorySortOrder/categorySortOrder\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getAllCategories } from \"../../Services/category/category-service\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport Header from \"../header\";\nimport Footer from \"../footer\";\nimport Menu from \"../menu\";\nexport async function loader() {\n  try {\n    const categories = await getAllCategories();\n    console.log(categories);\n    return json({\n      categories\n    });\n  } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n    throw error;\n  }\n}\nexport default function CategorySort() {\n  _s();\n  const {\n    categories\n  } = useLoaderData();\n  return <div>\n      {/* <div> */}\n      <Header />\n      <Menu />\n      {/* <Summary /> */}\n      <Footer />\n      <CategorySortOrder categories={categories} />\n    </div>;\n}\n_s(CategorySort, \"J32au3ktFbFwnSn6gfgGrJMoP+o=\", false, function () {\n  return [useLoaderData];\n});\n_c = CategorySort;\nvar _c;\n$RefreshReg$(_c, \"CategorySort\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["old_index", "new_index", "React", "category", "import_jsx_dev_runtime"]
}
