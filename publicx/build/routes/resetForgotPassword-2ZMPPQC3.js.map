{
  "version": 3,
  "sources": ["../../../app/routes/resetForgotPassword/route.jsx", "../../../app/Components/login/components/reset-forgot-password.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/routes/resetForgotPassword/route.jsx\"\n);\nimport.meta.hot.lastModified = \"1709483501916.7373\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport ResetForgotPassword from \"../../Components/login/components/reset-forgot-password\";\nimport { forgotPassword } from \"../../Services/login/login-service\";\n\nexport default function resetPasswordRoute() {\n  return (\n    <div>\n      <ResetForgotPassword />\n    </div>\n  );\n}\nexport const action = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const email = formData.get('useremail'); \n    console.log(email, \"email\")\n    if (!email) {\n      return json({ error: 'Email is missing' }, { status: 400 });\n    }\n\n    const response = await forgotPassword(email); \n\n    if (!response) {\n      return json({ error: 'No response from forgotPassword function' }, { status: 500 });\n    }\n\n    if (response.err) {\n      return json({ error: response.err }, { status: 404 });\n    } else {\n      return json({ message: response.msg });\n    }\n  } catch (error) {\n    console.error(\"Error in forgotPassword action:\", error);\n    return json({ error: 'An error occurred while processing your request' }, { status: 500 });\n  }\n};\n\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/Components/login/components/reset-forgot-password.jsx\"\n);\nimport.meta.hot.lastModified = \"1709483265550.0664\";\n}\n// REMIX HMR END\n\nimport React, { Component } from \"react\";\nimport * as userservice from \"../services/login-service\";\nimport { Link } from \"react-router-dom\";\nimport { Form } from \"@remix-run/react\";\n\nexport class ResetForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useremail: \"\",\n      messageModal: \"\",\n      emailError: false,\n    };\n  }\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      messageModal: \"\",\n      emailError: false,\n    });\n  };\n\n  validateEmail = (value) => {\n    const emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    return !!emailValid;\n  };\n\n  render() {\n    const { useremail, messageModal, emailError } = this.state;\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 offset-sm-3\">\n            <div className=\"logo-wrapper d-flex justify-content-center mt-5\">\n              <img src=\"/images/proPeakNewLogo.svg\" alt=\"proPeak PMS\" style={{ width: \"450px\" }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-8 offset-sm-2\">\n            <div className=\"reset-wrapper box-shadow justify-content-center align-items-center\">\n              {messageModal && (\n                <span className=\"alertposition reset-alert alert-danger text-center\">{messageModal}</span>\n              )}\n              {emailError && (\n                <span className=\"alertposition reset-alert alert-danger text-center\" style={{ height: \"50px\" }}>\n                  Please enter a valid email address.\n                </span>\n              )}\n              <h4 className=\"login-title\">Forgot Password</h4>\n              <hr />\n              <Form method=\"POST\" action=\"/resetForgotPassword\" >\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <input\n                      className=\"form-control\"\n                      type=\"email\"\n                      onChange={this.handleInputChange}\n                      value={useremail}\n                      name=\"useremail\"\n                      placeholder=\"Enter your registered email id\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row mt-3\">\n                  <div className=\"col-sm-12\">\n                    <button className=\"btn btn-primary btn-md mt-1 float-right\" type=\"submit\">\n                      Go\n                    </button>\n                  </div>\n                </div>\n              </Form>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <small className=\"\">\n                    {\" \"}\n                    Login ?{\" \"}\n                    <Link\n                      to={\"/login\"}\n                      className=\"links\"\n                      style={{\n                        lineHeight: \"1.3em\",\n                        color: \"rgb(255, 152, 0)\",\n                        fontSize: \"15px\",\n                      }}\n                    >\n                      Click here\n                    </Link>\n                  </small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetForgotPassword;\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
